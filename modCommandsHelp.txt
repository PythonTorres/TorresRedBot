**Краткое описание работы событий**
```
При создании события происходят 2 вещи (кроме команды .testEvent):
1. Создается сообщение события с селектором исходов.
2. Создается запись о событии в базе данных

На данный момент события в базе могут иметь 4 статуса:
Active - ставки открыты, событие может быть отредактировано
Inactive - ставки закрыты, событие может быть отредактировано
In Review - подводятся итоги события (ставки офк закрыты), событие нельзя редактировать
Archived - событие в архиве, селектора исходов нет, событие нельзя отредактировать

Между этими состояниями существуют ТОЛЬКО следующие возможности перехода:
Active -> Inactive (команда .closeEvent)
Inactive -> Active (команда .openEvent)
Inactive -> In Review (команда .summarizeEvent)
In Review -> Inactive (при нажатии Отмена во время подведения итогов)
In Review -> Archived (при нажатии Подтвердить во время подведения итогов)

Изначально событие создается в статусе Active.
Также замечу что на данный момент (и скорее всего навсегда) архивированное событие нельзя восстановить, поэтому следует быть аккуратным при подведении итогов.
```



**Основные команды событий**
```
ВСЕ КОМАНДЫ НИЖЕ НЕОБХОДИМО ИСПОЛЬЗОВАТЬ В КАНАЛЕ, ГДЕ НАХОДИТСЯ (ИЛИ ДОЛЖНО НАХОДИТЬСЯ) НУЖНОЕ СОБЫТИЕ

.createEvent "Название события" Цвет(число) https://прямая.ссылка/на/изображение.png "Исход первый" "Исход второй" "И так далее"

Создает сообщение и событие в базе данных. Если необходимо вставить двойные кавычки в название или варианты, нужно использовать \". Например: .createEvent "Название \"супер\" события"


.testEvent (те же аргументы)

Использовать на тестовом сервере. Создает сообщение, но не создает событие в базе данных (для того чтобы посмотреть, как будет выглядеть сообщение).


.closeEvent ID_сообщения_ивента

Закрывает ставки на событие. Можно закрыть только если ставки открыты.


.openEvent ID_сообщения_ивента

Открывает ставки на событие (например, если случайно или раньше времени закрыл). Можно открыть только если ставки закрыты.


.summarizeEvent ID_сообщения_ивента

Начинает процесс подведения итогов ивента. Получится использовать только на закрытом ивенте и без ожидания ставок. Дальше бот напишет сообщение в лс (копию сообщения ивента), где нужно будет выбрать победный результат. После выбора будет отдельное сообщение, ожидающее подтверждения. ОБЯЗАТЕЛЬНО (!) проверить правильность выбора, если ошибся, нажми отмену, а потом используй команду снова. Событие, итоги которого подведены, невозможно (пока что) откатить назад. Если все проверил и выбрал правильно, жмешь Подтвердить и получишь результаты расчета от бота.


.deleteEvent ID_сообщения_ивента

Удаляет сообщение события, а также событие в базе данных. Для удаления событие должно быть закрыто, ставок или ожиданий ставок быть не должно.


.rollbackEvent ID_сообщения_ивента (пока доступно только мне, т.к. использоваться будет почти никогда)

Возвращает все ставки на событие пользователям. Для возврата событие должно быть закрыто, ставок или ожиданий ставок быть не должно.
```



**Команды для изменения события**
```
.addOptions ID_сообщения_ивента "Первый дополнительный исход" "Второй дополнительный исход" "И так далее"

Использовать в канале событий. Добавляет новые исходы. Использовать аккуратно, т.к. пока нет возможности убрать вариант, а уж тем более если на него сделают ставки (только вручную через меня). Можно добавить как один новый исход, так и несколько (опять же команда на крайний случай).


.editEventTitle ID_сообщения_ивента "Новое название ивента"

Использовать в канале событий. Изменяет заголовок события (только для активных и неактивных событий) как в сообщении, так и в базе данных.
```

Цвет для события можно выбрать тут (поле MapInfo Color):
https://www.tydac.ch/color/